trigger:
  branches:
    include:
      - '*'
  tags:
    include:
      - v*

jobs:
- job: Build
  strategy:
    maxParallel: 4
    matrix:
      LinuxWheels:
        imageName: 'ubuntu-latest'
        artifactName: linuxwheels
        CFLAGS: "-std=c++14"
        CIBW_BEFORE_TEST: pip install -r {project}/test_requirements.txt && pip uninstall -y pyxpdf_data
  pool: { vmImage: $(imageName) }
  variables:
    WITH_CYTHON: true
    CIBW_TEST_COMMAND: "python {project}/runtests.py -v"
    CIBW_BUILD: "cp36-*" 
    CIBW_BUILD_VERBOSITY: 1
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
      displayName: "Python Setup"
      
    - bash: |
        brew postinstall openssl
        export SSL_CERT_FILE=$(brew --prefix)/etc/openssl/cert.pem
        echo "##vso[task.setvariable variable=SSL_CERT_FILE]$SSL_CERT_FILE"
      displayName: "Update SSL Certs"
      condition: contains(variables['imageName'], 'macOS')
    - bash: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r test_requirements.txt
        python setup.py build_ext -i  -vv --warnings
        python runtests.py -vv || exit 1
        make clean 
      displayName: "Initial Build Tests"
      
    - bash: |
        pip install cibuildwheel==1.4.1
        cibuildwheel --output-dir wheelhouse .
      displayName: "Build Wheels"
        
    - task: PublishBuildArtifacts@1
      inputs: 
        pathtoPublish: 'wheelhouse'
        ArtifactName: $(artifactName)
      displayName: "Create Artifacts"


- job: publishWheels
  displayName: Make Release
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  pool: {vmImage: "ubuntu-latest"}
  variables:
    TWINE_USERNAME: $(pypi_username)
    TWINE_PASSWORD: $(pypi_token)
  steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: 'wheelhouse'

    - bash: ls wheelhouse

    - bash: |
        python3 -m pip install --upgrade pip setuptools twine
        python3 -m pip install -r test_requirements.txt
        python3 -m pip uninstall -y pyxpdf_data
        python3 setup.py sdist -d wheelhouse --with-cython
        python3 -m pip install wheelhouse/pyxpdf*
        python3 runtests.py -v || exit 1
        if python3 -m twine check wheelhouse/**/*; then
          echo $TWINE_USERNAME
          echo $TWINE_PASSWORD
          python3 -m twine upload --repository testpypi --non-interactive --verbose wheelhouse/**/*
        fi
      displayName: PyPi Release

    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'github.com_ashutoshvarma'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        tagPattern: 'v.+'
        releaseNotesSource: 'inline'
        releaseNotesInline: 'Changelog - https://pyxpdf.readthedocs.io/en/latest/changelog.html'
        assets: 'wheelhouse/**/*'
        addChangeLog: false

    
